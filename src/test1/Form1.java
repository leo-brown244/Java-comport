/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;
//import gnu.io.*;
import java.awt.Color;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.TooManyListenersException;

import com.fazecast.jSerialComm.*;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author VicBossHitman
 */
public class Form1 extends javax.swing.JFrame implements DataListener {

    Boolean StxEtxDelim = true;
    Boolean OtherDelim = false;
    Boolean NoDelim = false;     
    Boolean ActiveFlag = false;
    Boolean error;
    Boolean CommError = true;
    Boolean PortIsAlreadyOpen = false;
    SerialPort serialPort1;
    
    String STX = "";
    String ETX = "";
//    String CR = '\x0d';
//    String  LF = '\x0a';
    
    String CommandMessage1 = "\r\n";
    String CommandMessage2 = "\r\n";
    String CommandMessage3 = "\r\n";
    String CommandMessage4 = "\r\n";
    String CommandMessage5 = "\r\n";
    String CommandMessage6 = "\r\n";
    String CommandMessage7 = "\r\n";
    String CommandMessage8 = "\r\n";
    String CommandMessage9 = "\r\n";
    String CommandMessage10 = "\r\n";
    String CommandMessage11 = "\r\n";
    String CommandMessage12 = "\r\n";
    String CommandMessage13 = "\r\n";
    public static String ButtonText1 = "";
    public static String ButtonText2 = "";
    public static String ButtonText3 = "";
    public static String ButtonText4 = "";
    public static String ButtonText5 = "";
    public static String ButtonText6 = "";
    public static String ButtonText7 = "";
    public static String ButtonText8 = "";
    public static String ButtonText9 = "";
    public static String ButtonText10 = "";
    public static String ButtonTextA = "";
    public static String ButtonTextB = "";
    public static String ButtonTextC = "";
    public static String ButtonTextSlider = "";
    String SliderCommandMessage = "\r\n";
    String CurPortname="";
    int CurPortnum=-1;
    String RxString;
    String ComPortName; // = "COM2";
    String ClearScreenCommand = "CLRSCR\r\n\r\n";
//    String ScreenHomeCommand = "\x1b[H";
    String InstrumentType;
    String InputValueRead;
    String StopBits = "1";
    String Parity = "None";
    String Handshake = "None";
    
    /**
     * Creates new form Form1
     */
    public Form1() {
        initComponents();
        
        addListener(this);
        
    }

    private List<DataListener> listeners = new ArrayList<DataListener>();

    public void addListener(DataListener toAdd) {
        listeners.add(toAdd);
    }

    public void sayHello(String str) {
        System.out.println("Hello!");
    
        // Notify everybody that may be interested.
        for (DataListener hl : listeners)
            hl.getData(str);
    }
            
    @Override
    public void getData(String str) {
        textBox1.setText(textBox1.getText() + str);
    }
   

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        textBox1 = new javax.swing.JTextArea();
        setup = new javax.swing.JButton();
        clearscreen = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        portselect = new javax.swing.JSpinner();
        Initport = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BaudSelect = new javax.swing.JComboBox<>();
        handshake1 = new javax.swing.JRadioButton();
        handshake2 = new javax.swing.JRadioButton();
        handshake3 = new javax.swing.JRadioButton();
        Button1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        databit1 = new javax.swing.JRadioButton();
        databit2 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        parity1 = new javax.swing.JRadioButton();
        parity2 = new javax.swing.JRadioButton();
        parity3 = new javax.swing.JRadioButton();
        stopbit1 = new javax.swing.JRadioButton();
        stopbit2 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Button2 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        Button10 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        slider = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        slider1 = new javax.swing.JTextField();
        ButtonA = new javax.swing.JButton();
        ButtonA1 = new javax.swing.JTextField();
        ButtonB = new javax.swing.JButton();
        ButtonB1 = new javax.swing.JTextField();
        ButtonC1 = new javax.swing.JTextField();
        ButtonC = new javax.swing.JButton();
        delimit1 = new javax.swing.JRadioButton();
        delimit2 = new javax.swing.JRadioButton();
        delimit3 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        startdelimiter = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        enddelimiter = new javax.swing.JTextField();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusCycleRoot(false);
        setSize(new java.awt.Dimension(14, 14));

        textBox1.setEditable(false);
        textBox1.setBackground(new java.awt.Color(255, 255, 192));
        textBox1.setColumns(20);
        textBox1.setForeground(java.awt.Color.blue);
        textBox1.setLineWrap(true);
        textBox1.setRows(5);
        textBox1.setToolTipText("");
        textBox1.setWrapStyleWord(true);
        textBox1.setName("textBox1"); // NOI18N
        jScrollPane1.setViewportView(textBox1);
        textBox1.getAccessibleContext().setAccessibleName("textBox1");

        setup.setText("Set Up-Buttons");
        setup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setupActionPerformed(evt);
            }
        });

        clearscreen.setLabel("CLR Screen Text");
        clearscreen.setName("button35"); // NOI18N
        clearscreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearscreenActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("COM PORT Select:");

        portselect.setName("portselect"); // NOI18N

        Initport.setText("Init-Ser-Port");
        Initport.setName("button1"); // NOI18N
        Initport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InitportActionPerformed(evt);
            }
        });

        jLabel2.setForeground(java.awt.Color.red);
        jLabel2.setText("Make sure to Init port before use");
        jLabel2.setToolTipText("");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setName("label1"); // NOI18N

        jLabel3.setText("Baud Rate Select:");

        BaudSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "110", "300", "600", "1200", "2400", "4800", "9600", "19200", "38400", "57600", "115200" }));
        BaudSelect.setSelectedIndex(6);
        BaudSelect.setName("BaudSelect"); // NOI18N
        BaudSelect.setRequestFocusEnabled(false);
        BaudSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaudSelectActionPerformed(evt);
            }
        });

        buttonGroup1.add(handshake1);
        handshake1.setSelected(true);
        handshake1.setText("None");
        handshake1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handshake1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(handshake2);
        handshake2.setText("RTS");
        handshake2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handshake2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(handshake3);
        handshake3.setText("XonXoff");
        handshake3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handshake3ActionPerformed(evt);
            }
        });

        Button1.setText("Button1");
        Button1.setName("button16"); // NOI18N
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        jLabel4.setText("HandShake");

        buttonGroup2.add(databit1);
        databit1.setSelected(true);
        databit1.setText("8");

        buttonGroup2.add(databit2);
        databit2.setText("7");

        jLabel5.setText("DataBits");

        buttonGroup3.add(parity1);
        parity1.setSelected(true);
        parity1.setText("None");
        parity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parity1ActionPerformed(evt);
            }
        });

        buttonGroup3.add(parity2);
        parity2.setText("Odd");
        parity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parity2ActionPerformed(evt);
            }
        });

        buttonGroup3.add(parity3);
        parity3.setText("Even");
        parity3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parity3ActionPerformed(evt);
            }
        });

        buttonGroup4.add(stopbit1);
        stopbit1.setSelected(true);
        stopbit1.setText("1");
        stopbit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopbit1ActionPerformed(evt);
            }
        });

        buttonGroup4.add(stopbit2);
        stopbit2.setText("2");
        stopbit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopbit2ActionPerformed(evt);
            }
        });

        jLabel6.setText("StopBits");

        jLabel7.setText("Parity");

        Button2.setText("Button2");
        Button2.setName("button16"); // NOI18N
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        Button3.setText("Button3");
        Button3.setName("button16"); // NOI18N
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        Button4.setText("Button4");
        Button4.setName("button16"); // NOI18N
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        Button5.setText("Button5");
        Button5.setName("button16"); // NOI18N
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });

        Button6.setText("Button6");
        Button6.setName("button16"); // NOI18N
        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });

        Button7.setText("Button7");
        Button7.setName("button16"); // NOI18N
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });

        Button8.setText("Button8");
        Button8.setName("button16"); // NOI18N
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });

        Button9.setText("Button9");
        Button9.setName("button16"); // NOI18N
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });

        Button10.setText("Button10");
        Button10.setName("button16"); // NOI18N
        Button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button10ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Serial Command Panel");

        slider.setMaximum(4905);
        slider.setValue(0);
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("- Value +");

        slider1.setEditable(false);
        slider1.setBackground(new java.awt.Color(255, 255, 192));
        slider1.setText("0");

        ButtonA.setText("Button A");
        ButtonA.setName("button16"); // NOI18N
        ButtonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAActionPerformed(evt);
            }
        });

        ButtonA1.setText("0");

        ButtonB.setText("Button B");
        ButtonB.setName("button16"); // NOI18N
        ButtonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBActionPerformed(evt);
            }
        });

        ButtonB1.setText("0");

        ButtonC1.setText("0");

        ButtonC.setText("Button C");
        ButtonC.setName("button16"); // NOI18N
        ButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCActionPerformed(evt);
            }
        });

        buttonGroup5.add(delimit1);
        delimit1.setText("STX-ETX");
        delimit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delimit1ActionPerformed(evt);
            }
        });

        buttonGroup5.add(delimit2);
        delimit2.setText("Other");
        delimit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delimit2ActionPerformed(evt);
            }
        });

        buttonGroup5.add(delimit3);
        delimit3.setText("None");
        delimit3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delimit3ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Command Delimits");

        jLabel12.setText("Start Delimiter");

        startdelimiter.setText("STX");

        jLabel13.setText("End Delimiter");

        enddelimiter.setText("ETX");

        exit.setText("Exit Program +  Save Settings");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(0, 66, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(databit1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BaudSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(databit2)
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(parity1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(parity2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(parity3))
                                    .addComponent(jLabel7))
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(stopbit1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(stopbit2))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Button10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(slider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(handshake1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(handshake2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(handshake3))
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(delimit1)
                                    .addComponent(delimit3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(delimit2)
                                        .addGap(116, 116, 116)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(413, 413, 413)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enddelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(clearscreen, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(portselect, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(Initport)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(49, 49, 49)
                                    .addComponent(slider1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ButtonA, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(setup)
                                            .addGap(149, 149, 149)
                                            .addComponent(exit))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(startdelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(ButtonA1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(ButtonB, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ButtonB1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ButtonC, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ButtonC1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Initport, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(portselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(clearscreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BaudSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(handshake1)
                    .addComponent(handshake2)
                    .addComponent(handshake3)
                    .addComponent(databit1)
                    .addComponent(databit2)
                    .addComponent(parity1)
                    .addComponent(parity2)
                    .addComponent(parity3)
                    .addComponent(stopbit1)
                    .addComponent(stopbit2))
                .addGap(11, 11, 11)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button1)
                            .addComponent(Button2)
                            .addComponent(Button3)
                            .addComponent(Button4)
                            .addComponent(Button5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button7)
                            .addComponent(Button6)
                            .addComponent(Button8)
                            .addComponent(Button9)
                            .addComponent(Button10))
                        .addGap(27, 27, 27)
                        .addComponent(slider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ButtonA)
                        .addComponent(ButtonA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonB)
                        .addComponent(ButtonB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonC)
                        .addComponent(ButtonC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delimit1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delimit2)
                            .addComponent(jLabel12)
                            .addComponent(startdelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(enddelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delimit3)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setup)
                            .addComponent(exit))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        clearscreen.getAccessibleContext().setAccessibleName("");
        portselect.getAccessibleContext().setAccessibleName("");
        Initport.getAccessibleContext().setAccessibleName("");
        jLabel2.getAccessibleContext().setAccessibleName("");
        BaudSelect.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setupActionPerformed
        
        new Form2().setVisible(true);
    }//GEN-LAST:event_setupActionPerformed

    private void clearscreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearscreenActionPerformed
        
        textBox1.setText("");
    }//GEN-LAST:event_clearscreenActionPerformed

    private void BaudSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaudSelectActionPerformed
        
    }//GEN-LAST:event_BaudSelectActionPerformed

    private void InitportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InitportActionPerformed
        
        Foo("");
    }//GEN-LAST:event_InitportActionPerformed

    void listenPort() throws IOException {
        String str;
        str=portselect.getValue().toString();
        if (PortIsAlreadyOpen==false)
        {
            
            if (str.compareTo("1")==0)
                CurPortname = "COM1";
            if (str.compareTo("2")==0)
                CurPortname = "COM2";
            if (str.compareTo("3")==0)
                CurPortname = "COM3";
            if (str.compareTo("4")==0)
                CurPortname = "COM4";
            if (str.compareTo("5")==0)
                CurPortname = "COM5";
            if (str.compareTo("6")==0)
                CurPortname = "COM6";
            if (str.compareTo("7")==0)
                CurPortname = "COM7";
            if (str.compareTo("8")==0)
                CurPortname = "COM8";
        }
        else
        {
            this.textBox1.setText("ERROR: Port is already open!");     /// if the user tries to re-init the port once is open
            return;
        }
//        CurPortname = "COM" + portselect.getValue().toString();
        System.out.println(CurPortname);
        SerialPort[] ports = SerialPort.getCommPorts();
        
        for (int i = 0; i < ports.length; i++)
        {
            str=ports[i].getSystemPortName();

            System.out.println(i);
            if(str.compareTo(CurPortname)==0)
            {

                CurPortnum=i;
            }
        }
        System.out.println(CurPortnum);
        if(CurPortnum<0)
        {
            this.textBox1.setText("Could not open the COM port.  Most likely it is already in use, has been removed, or is unavailable COM Port Unavalible"); 
        }
        else{
            
            serialPort1 = ports[CurPortnum];
            if (!serialPort1.isOpen())
            {
                ComPortName = CurPortname;
                textBox1.setText("Port Active on: " + ComPortName + ", Baud = " + BaudSelect.getSelectedItem().toString() + ", Bits = " + StopBits + ", Parity = " + Parity + ", HandShake = " + Handshake + "\r\n");
                CommError = false;
                PortIsAlreadyOpen = true;
                
                serialPort1.openPort();
                
                
                serialPort1.setComPortTimeouts(SerialPort.TIMEOUT_READ_SEMI_BLOCKING, 0, 0);
                InputStream in = serialPort1.getInputStream();
                try
                {
                    String s = "";
                    Reader inputStreamReader = new InputStreamReader(in);
                    int data = inputStreamReader.read();
                    char theChar = (char) data;
                    String tmp = Character.toString(theChar);
                    s = s + tmp;
                    sayHello(tmp);
                    while(data != -1){
                        
                        data = inputStreamReader.read();
                        theChar = (char) data;
                        tmp = Character.toString(theChar);
                        s = s + tmp;
                        
                        sayHello(tmp);
                        System.out.println(s); 
                    }
                    inputStreamReader.close();

                } catch (IOException e) { e.printStackTrace(); }
                in.close();
                serialPort1.closePort();
            } 
            else{
                this.textBox1.setText("Could not open the COM port.  Most likely it is already in use, has been removed, or is unavailable COM Port Unavalible"); 
                }
        }
        
    }
    void Foo(String str) {
        class OneShotTask implements Runnable {
            String str;
            OneShotTask(String s) { str = s; }
            @Override
            public void run() {
                try {
                    listenPort();
                } catch (IOException ex) {
                    Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        Thread t = new Thread(new OneShotTask(str));
        t.start();
    }
    
    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        
        String str = ButtonText1;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }//GEN-LAST:event_Button1ActionPerformed

    private void handshake1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handshake1ActionPerformed
        Handshake = "None";
    }//GEN-LAST:event_handshake1ActionPerformed

    private void handshake2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handshake2ActionPerformed
        Handshake = "RTS";
    }//GEN-LAST:event_handshake2ActionPerformed

    private void stopbit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopbit1ActionPerformed
        StopBits = "1";
    }//GEN-LAST:event_stopbit1ActionPerformed

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        String str = ButtonText2;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        String str = ButtonText3;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button3ActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        String str = ButtonText4;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button4ActionPerformed

    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        String str = ButtonText5;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button5ActionPerformed

    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button6ActionPerformed
        String str = ButtonText6;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button6ActionPerformed

    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        String str = ButtonText7;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button7ActionPerformed

    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        String str = ButtonText8;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button8ActionPerformed

    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        String str = ButtonText9;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button9ActionPerformed

    private void Button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button10ActionPerformed
        String str = ButtonText10;
        str = STX + str + ETX + CommandMessage1;
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button10ActionPerformed

    private void ButtonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAActionPerformed
        String str= ButtonA1.getText();
        str = STX + ButtonTextA + str + ETX + CommandMessage1;
        
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonAActionPerformed

    private void ButtonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBActionPerformed
        String str= ButtonB1.getText();
        str = STX + ButtonTextB + str + ETX + CommandMessage1;
        
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonBActionPerformed

    private void ButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCActionPerformed
        String str= ButtonC1.getText();
        str = STX + ButtonTextC + str + ETX + CommandMessage1;
        
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonCActionPerformed

    private void delimit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delimit1ActionPerformed
        // TODO add your handling code here:
        STX = "";
        ETX = "";
    }//GEN-LAST:event_delimit1ActionPerformed

    private void handshake3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handshake3ActionPerformed
        Handshake = "XonXoff";
    }//GEN-LAST:event_handshake3ActionPerformed

    private void stopbit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopbit2ActionPerformed
        StopBits = "2";
    }//GEN-LAST:event_stopbit2ActionPerformed

    private void parity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parity1ActionPerformed
        Parity = "None";
    }//GEN-LAST:event_parity1ActionPerformed

    private void parity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parity2ActionPerformed
        Parity = "Odd";
    }//GEN-LAST:event_parity2ActionPerformed

    private void parity3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parity3ActionPerformed
        Parity = "Even";
    }//GEN-LAST:event_parity3ActionPerformed

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        // TODO add your handling code here:
        String str= Integer.toString(slider.getValue());
        slider1.setText(str);
        str = STX + ButtonTextSlider + str + ETX + SliderCommandMessage;
        
        OutputStream outStream = serialPort1.getOutputStream();
        try {
            outStream.write(str.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sliderStateChanged

    private void delimit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delimit2ActionPerformed
        // TODO add your handling code here:
        STX = startdelimiter.getText();
        ETX = enddelimiter.getText();
    }//GEN-LAST:event_delimit2ActionPerformed

    private void delimit3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delimit3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delimit3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BaudSelect;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button10;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button6;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JButton ButtonA;
    private javax.swing.JTextField ButtonA1;
    private javax.swing.JButton ButtonB;
    private javax.swing.JTextField ButtonB1;
    private javax.swing.JButton ButtonC;
    private javax.swing.JTextField ButtonC1;
    private javax.swing.JButton Initport;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JButton clearscreen;
    private javax.swing.JRadioButton databit1;
    private javax.swing.JRadioButton databit2;
    private javax.swing.JRadioButton delimit1;
    private javax.swing.JRadioButton delimit2;
    private javax.swing.JRadioButton delimit3;
    private javax.swing.JTextField enddelimiter;
    private javax.swing.JButton exit;
    private javax.swing.JRadioButton handshake1;
    private javax.swing.JRadioButton handshake2;
    private javax.swing.JRadioButton handshake3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton parity1;
    private javax.swing.JRadioButton parity2;
    private javax.swing.JRadioButton parity3;
    private javax.swing.JSpinner portselect;
    private javax.swing.JButton setup;
    private javax.swing.JSlider slider;
    private javax.swing.JTextField slider1;
    private javax.swing.JTextField startdelimiter;
    private javax.swing.JRadioButton stopbit1;
    private javax.swing.JRadioButton stopbit2;
    private javax.swing.JTextArea textBox1;
    // End of variables declaration//GEN-END:variables
}
